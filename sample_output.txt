Last login: Mon Dec  8 21:42:59 on ttys003
Prashants-MacBook-Pro:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 411   | "RT @Al3AMEED_70: Thomas Malinowski , is not welcome &amp; to leave the country #bahrain @gloriahere  #obama #usa #uk #eu #hrw #amnesty #un http…" |
| 406   | "RT @FoxNews: New poll suggests majority of Americans disapprove of the way Pres. #Obama handled #Ferguson. #KellyFile http://t.co/QayPvZJR5p"     |
| 406   | "RT @FoxNews: New poll suggests majority of Americans disapprove of the way Pres. #Obama handled #Ferguson. #KellyFile http://t.co/QayPvZJR5p"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
| 337   | "RT @AndrewCMcCarthy: 2 Ilegal aliens w/ terror ties released b/c #Obama decided to release them, not b/c 'judge' said so. My @NRO column: h…"     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
99 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (u:User)-[POSTS]->(t:Tweet)<-[TAGS]-(h:Hashtag) return (count(distinct(u.location))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+-------------------------------+
| Longest_Path | Hashtag        |
+-------------------------------+
| 846          | "obama"        |
| 111          | "tcot"         |
| 59           | "amnesty"      |
| 53           | "pjnet"        |
| 49           | "ashtoncarter" |
| 48           | "israel"       |
| 43           | "immigration"  |
| 40           | "usa"          |
| 40           | "jordan"       |
| 36           | "benghazi"     |
+-------------------------------+
10 rows
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (u:User)-[POSTS]->(t:Tweet)<-[TAGS]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(u.location))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 590          |
+--------------+
1 row
64 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ match (u:User)-[POSTS]->(t:Tweet)<-[:TAGS]-(h:Hashtag)  where u.location = "USA" and h.name = "obama" and t.retweeted = false  return t.text AS Tweet,u.location AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                          | Location | Retweet_Count |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "RT @JoeTurner212: What Annoys #OBAMA @TheDemocrats http://t.co/VNUUFM469q @GOP @foxnation @SpeakerBoehner @thehill @seanhannity @TheFive @N…" | "USA"    | 86            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGS]->(t:Tweet)<-[:TAGS]-(h2:Hashtag) where h1.name = "obama" AND h2.name = "tcot"  with t MATCH (h3:Hashtag)-[TAGS]->(t)<-[POSTS]-(u:User) WHERE h3.name = "politics" return u.name AS Name,u.location AS Location;
+-----------------------------------------------+
| Name            | Location                    |
+-----------------------------------------------+
| "The Live Show" | ""                          |
| "The Live Show" | ""                          |
| "Dan Mason"     | "#Reno #Tahoe #Nevada #BLC" |
+-----------------------------------------------+
3 rows
105 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGS] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+---------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                       | Tweet_Count |
+---------------------------------------------------------------------------------------------------------------------------------+
| Node[92477]{name:"<a href="http://twitter.com" rel="nofollow">Twitter Web Client</a>"}                            | 623         |
| Node[92481]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 346         |
| Node[92483]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 317         |
| Node[92495]{name:"<a href="http://ifttt.com" rel="nofollow">IFTTT</a>"}                                           | 175         |
| Node[92479]{name:"<a href="https://dev.twitter.com/docs/tfw" rel="nofollow">Twitter for Websites</a>"}            | 116         |
| Node[92478]{name:"<a href="http://twitter.com/#!/download/ipad" rel="nofollow">Twitter for iPad</a>"}             | 98          |
| Node[92488]{name:"<a href="https://about.twitter.com/products/tweetdeck" rel="nofollow">TweetDeck</a>"}           | 67          |
| Node[92480]{name:"<a href="http://twitterfeed.com" rel="nofollow">twitterfeed</a>"}                               | 53          |
| Node[92498]{name:"<a href="http://www.hootsuite.com" rel="nofollow">Hootsuite</a>"}                               | 45          |
| Node[92906]{name:"<a href="http://www.strictly-software.com" rel="nofollow">Strictly Tweetbot for Wordpress</a>"} | 32          |
+---------------------------------------------------------------------------------------------------------------------------------+
10 rows
76 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGS]->(t)<-[POSTS]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-----------------------------+
| Count | User                |
+-----------------------------+
| 47    | "END Islamic State" |
| 47    | "WORDLNEWS"         |
| 40    | "A.T.O.M"           |
| 25    | "doma runner"       |
| 14    | "ernesto perez"     |
| 11    | "Jeff Ho"           |
| 10    | "Hihid"             |
| 10    | "1stHeadlines"      |
| 9     | "Gloris TNT"        |
| 9     | "News US"           |
+-----------------------------+
10 rows
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTS]->(t:Tweet)<-[TAGS]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTS]->(t:Tweet)<-[TAGS]-(h:Hashtag) where h.name = "obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
64 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGS]->(t:Tweet)<-[:POSTS]-(u:User) where h.name='obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 40       |
+----------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ Prashants-MacBook-Pro:bin Prashant$ 
  [Restored]
Last login: Tue Dec  9 14:10:59 on console
pku:bin Prashant$ clear
  [Restored]
Last login: Tue Dec  9 18:19:01 on console
pku:bin Prashant$ python twipy.pyclear
python: can't open file 'twipy.pyclear': [Errno 2] No such file or directory
pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
5660 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
2776 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
172 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
212 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
118 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
66 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
82 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
337 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
82 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
61 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
827 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
120 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
254 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
41 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
111 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
42 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
231 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
77 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
99 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
223 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
75 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
160 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
156 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
176 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
61 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
182 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
147 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
106 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
128 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
51 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku: clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
36 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
126 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
64 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
64 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
41 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
215 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
123 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
98 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
205 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
42 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
119 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
93 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
95 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
46 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
98 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
82 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
45 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
96 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
224 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
87 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
83 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
64 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
142 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
82 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
90 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
172 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
58 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
84 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
49 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
174 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
82 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
40 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
80 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
72 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
80 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
49 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
86 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
195 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
65 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
79 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
52 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
49 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
86 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
41 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
73 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
6 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
75 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
56 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
84 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
255 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
103 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                              |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 61    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"       |
| 29    | "Mi columna @WashingtonHisp sobre apoyo #Latino a la #AccionEjecutiva de #Obama http://t.co/zXeSaiOYwM"                                            |
| 24    | "I wonder if Obama used semicolons? #obama #javascript"                                                                                            |
| 23    | "If Pres #Obama has guts his next Supreme Court nominee will be a foreign-born transgender Wiccan with an online JD to give court diversity."      |
| 18    | "#Obama do the right thing. Implement immediate executive actions to stop the murder of people of color by police. #ThisStopsToday"                |
| 16    | "As if midterms never happened, Washington Establishment funds #Obamacare, #Amnesty &amp; the rest of #Obama's agenda http://t.co/W7iLrXp4TR"      |
| 7     | "#guarimbagringa  manda a decir #Maduro a #obama  Marico forma unos #colectivos protestas #NYC http://t.co/JRiYE0PYkx"                             |
| 7     | "@tedcruz @SenMikeLee @SenRandPaul @TGowdySC
Continues to amaze me how #Obama is still ALLOWED to remain President!! http://t.co/emheh91h2e"       |
| 7     | "Boehner's leadership: a symbolic immig bill to diss #Obama &amp; tax handouts for billionaires, zip for ordinary Americans. @NewDay @JohnKingCNN" |
| 6     | "If the #TortureReport didn't work, how did #Obama kill Osama bin Laden......"                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 33           | "Obama"         |
| 23           | "obama"         |
| 21           | "ColbertReport" |
| 20           | "OBAMA"         |
| 20           | "tcot"          |
| 19           | "EricGarner"    |
| 19           | "GOP"           |
| 18           | "Ferguson"      |
| 18           | "POTUS"         |
| 17           | "TortureReport" |
+--------------------------------+
10 rows
73 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 19           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 61            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 14          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 9           |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 3        |
+----------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
5093 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
4421 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
173 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
219 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
105 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
54 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
183 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
744 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
52 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
164 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
751 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
170 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
85 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
353 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
86 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
41 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
363 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
36 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
98 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
182 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
241 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
130 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
99 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
51 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
201 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
53 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
55 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
199 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
36 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
161 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
137 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
56 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
214 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
119 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
143 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
\Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
59 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
183 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
36 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
59 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ \clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
159 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
54 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
40 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
175 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
54 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
174 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
163 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
61 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
272 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
58 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
181 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
57 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
34 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
193 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
52 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
66 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
159 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
68 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ clear













































pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
163 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
53 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
34 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
194 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
73 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
163 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
96 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
46 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
181 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
54 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ 13clear
-bash: 13clear: command not found
pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 13clear
-bash: 13clear: command not found
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
164 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
69 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
166 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
52 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
217 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
61 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
47 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
196 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
58 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
181 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
78 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
55 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
168 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
213 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
45 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ 1clear
-bash: 1clear: command not found
pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 1clear
-bash: 1clear: command not found
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
184 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
165 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
63 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
48 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
174 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
54 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
162 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
52 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
| 68    | "Obama isn't popular. His party got hammered in mid-terms. But he's made big progress on all his governing priorities: http://t.co/EUKJd5OGHV"        |
| 63    | "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters"          |
| 61    | "Joe Rogan just told Obama that he will never be an "Elite President""                                                                                |
| 59    | "Meanwhile, Obama &amp; the government is chasing ISIS while telling us to remain patient and calm in the face of terror at home! #ThisStopsToday"    |
| 55    | "OMG Obama and Harry styles ugh I knew it http://t.co/PqGaIMtBPS"                                                                                     |
| 50    | ".@JoeNBC notes report clears Christie 2 minutes into show, yet he never mentioned HPSCI Benghazi report that cleared Obama? @Morning_Joe"            |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 44           | "Obama"         |
| 33           | "obama"         |
| 31           | "tcot"          |
| 30           | "TortureReport" |
| 29           | "ColbertReport" |
| 28           | "EricGarner"    |
| 28           | "Ferguson"      |
| 27           | "GOP"           |
| 27           | "CIA"           |
| 26           | "OBAMA"         |
+--------------------------------+
10 rows
160 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 26           |
+--------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
5809 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
4793 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
168 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
476 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
186 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
89 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
129 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
1170 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
66 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
191 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
942 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
51 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
40 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
183 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
107 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
1005 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
45 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
141 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
62 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
952 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
60 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
48 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
208 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
55 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
463 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
147 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
200 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
761 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
45 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
59 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
154 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
85 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
493 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
42 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
65 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
134 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
98 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
523 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
139 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ 
pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
99 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
572 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
44 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
37 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
132 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
116 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
623 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
46 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
44 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
105 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
537 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
34 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
142 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
97 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
510 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
134 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
117 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
498 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
173 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
165 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
144 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
83 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
640 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
127 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
49 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
93 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
460 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
27 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
131 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
97 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
470 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
139 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
87 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
484 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
6 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
136 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
86 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
461 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
143 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
99 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
612 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
39 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
23 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
135 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ ceal
-bash: ceal: command not found
pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
97 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
549 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
35 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
10 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
157 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
85 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
487 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
46 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
130 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
541 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
34 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
38 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
140 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
71 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
495 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
30 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
7 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
127 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
71 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
545 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
148 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
151 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
537 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
33 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
31 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
6 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
168 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
93 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
487 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
91 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
19 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
132 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
129 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
494 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
21 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
55 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
20 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
156 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
87 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
495 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
47 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
6 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
143 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
87 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
479 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
24 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
132 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
74 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
491 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
88 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
26 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
136 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
74 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
530 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
34 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
13 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
155 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
18 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
123 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
455 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
88 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
50 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
133 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
131 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
478 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
29 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
32 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
8 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
149 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
84 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
602 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
25 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
28 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
14 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
17 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
22 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
147 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
15 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ clear

pku:bin Prashant$ ./neo4j-shell -c < run_file.cypher
Welcome to the Neo4j Shell! Enter 'help' for a list of commands
NOTE: Remote Neo4j graph database service 'shell' at port 1337

neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K most retweeted tweets
Unknown command '#'
neo4j-sh (?)$ MATCH (t:Tweet) where t.retweet_count>0 AND t.retweeted = false return t.retweet_count AS count,t.text as Tweet order by t.retweet_count desc limit 10;
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| count | Tweet                                                                                                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
| 197   | "So sad😢 We'll miss you  #RIPSammy 
#MTVStars Justin Bieber http://t.co/maFmtF4Sjx"                                                                  |
| 171   | "Mary Landrieu's seat has been in Democratic hands for 132 years. http://t.co/wA8KqPWxje"                                                             |
| 154   | "JUST IN: House votes 219 to 197, 3 voted present, to block Obama from changing immigration laws by executive authority"                              |
| 141   | "Baby 
#MTVStars Justin Bieber http://t.co/ESvDZg3qvE"                                                                                                |
| 125   | "OMG HE'S SO PERFECT
#MTVStars Justin Bieber http://t.co/kGGm1QMOXo"                                                                                  |
| 98    | "Babe
#MTVStars Justin Bieber http://t.co/WaJhVGWIXk"                                                                                                 |
| 85    | "17 states sue 2 block Obama immigration order http://t.co/ahtCYHbwX5 via @POLITICO #TNTweeters👊 @EspuelasVox #latism http://t.co/4Tz5Oxyl1O"        |
| 78    | "Thank you @CoryBooker, for standing up for those who don't have a voice in the Senate like me &amp; my neighbors on #DC71 http://t.co/Qfy2JMTi8h"    |
| 77    | "@politico: House sends Obama message with immigration vote: http://t.co/P0RTyZxZCD #IBackObama #TNTweeters #tcot #FF http://t.co/jcwN4v2dxl"         |
| 73    | "blew it @jonfavs: Obama focused on health care instead of economy &amp; look where it got us: 10-M more insured &amp; fastest job growth since 1999" |
+---------------------------------------------------------------------------------------------------------------------------------------------------------------+
10 rows
107 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return top K hash tags that travel the most number of states
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) return (count(distinct(c.name))) AS Longest_Path,h.name AS Hashtag order by Longest_Path desc limit 10;
+--------------------------------+
| Longest_Path | Hashtag         |
+--------------------------------+
| 46           | "Obama"         |
| 38           | "tcot"          |
| 35           | "TortureReport" |
| 34           | "obama"         |
| 33           | "Ferguson"      |
| 31           | "ColbertReport" |
| 31           | "CIA"           |
| 30           | "EricGarner"    |
| 30           | "GOP"           |
| 29           | "OBAMA"         |
+--------------------------------+
10 rows
478 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the longest path of states that a particular hash tag travels within a given time period.
Unknown command '#'
neo4j-sh (?)$ MATCH (c:State)<-[FROM]-(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "obama" and t.created_at < 1417803604449 and t.created_at > 1351798658000 return (count(distinct(c.name))) AS Longest_Path;
+--------------+
| Longest_Path |
+--------------+
| 30           |
+--------------+
1 row
91 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Show contents of the most retweeted tweet for a hash tag Y and the state X where it was posted originally.
Unknown command '#'
neo4j-sh (?)$ match (c:State)<-[FROM]-(t:Tweet)<-[:TAGGED]-(h:Hashtag)  where c.name = "CA" and h.name = "Obama" and t.retweeted = false  return t.text AS Tweet,c.name AS Location,t.retweet_count AS Retweet_Count order by t.retweet_count desc limit 1;
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Tweet                                                                                                                                        | Location | Retweet_Count |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| "Our president talks again of the importance of #ImmigrationReform 
http://t.co/O487bgjEAZ
#latinos
#Obama 
#ImmigrationAction 
#TNTweeters" | "CA"     | 63            |
+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
1 row
43 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return users and their location, which have used hash tag A and also used hash tag B and hash tag C in their tweets.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h1:Hashtag)-[TAGGED]->(t:Tweet)<-[:TAGGED]-(h2:Hashtag) where h1.name = "damage" AND h2.name = "america"  with t MATCH (h3:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h3.name = "tyrants" return u.name AS Name,u.location AS Location;;
+------------------------------+
| Name       | Location        |
+------------------------------+
| "Jar cola" | "somewhere USA" |
+------------------------------+
1 row
9 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ #  Return max k platform used for tweeting of a certain hash tag.
Unknown command '#'
neo4j-sh (?)$ MATCH (h:Hashtag)-[:TAGGED] -> (t:Tweet)-[:USING] -> (s:Source) where h.name = "obama"  RETURN s as Source_Name, count(t) as Tweet_Count ORDER BY Tweet_Count DESC LIMIT 10;
+----------------------------------------------------------------------------------------------------------------------------------+
| Source_Name                                                                                                        | Tweet_Count |
+----------------------------------------------------------------------------------------------------------------------------------+
| Node[110743]{name:"<a href="http://twitter.com/download/iphone" rel="nofollow">Twitter for iPhone</a>"}            | 29          |
| Node[110745]{name:"<a href="http://instagram.com" rel="nofollow">Instagram</a>"}                                   | 15          |
| Node[110744]{name:"<a href="http://twitter.com/download/android" rel="nofollow">Twitter for Android</a>"}          | 10          |
| Node[110747]{name:"<a href="https://twitter.com/download/android" rel="nofollow">Twitter for Android Tablets</a>"} | 2           |
| Node[110938]{name:"<a href="http://foursquare.com" rel="nofollow">Foursquare</a>"}                                 | 1           |
+----------------------------------------------------------------------------------------------------------------------------------+
5 rows
11 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # List the top tweeting user for state X for a hash tag Y.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (h:Hashtag)-[TAGGED]->(t)<-[POSTED]-(u:User) WHERE h.name = "obama" and t.retweeted = false return count(t) AS Count,u.name AS User order by Count desc Limit 10;
+-------------------------------+
| Count | User                  |
+-------------------------------+
| 3     | "brady teague"        |
| 2     | "Jar cola"            |
| 2     | "ToKnow Advertising"  |
| 2     | "Glenda Malone-Wolfe" |
| 2     | "srini_durand"        |
| 1     | "AlwaysASoldier"      |
| 1     | "Charlotte Potts"     |
| 1     | "Serena Phillips"     |
| 1     | "Vinton Jeff Bayne"   |
| 1     | "I Can't Breathe"     |
+-------------------------------+
10 rows
16 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ # Return the maximum count of tweet using certain hash tag, by a user who has maximum followers.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ MATCH (u:User)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) WITH u ORDER BY u.followers DESC LIMIT 1 MATCH (u)-[POSTED]->(t:Tweet)<-[TAGGED]-(h:Hashtag) where h.name = "Obama" return count(t) as Count order by Count desc limit 1;
+-------+
| Count |
+-------+
| 1     |
+-------+
1 row
144 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ # print the verified users for a particular hashtag.
Unknown command '#'
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ match (h:Hashtag)-[TAGGED]->(t:Tweet)<-[:POSTED]-(u:User) where h.name='Obama' and u.verified=true return count(u);
+----------+
| count(u) |
+----------+
| 4        |
+----------+
1 row
12 ms
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ 
neo4j-sh (?)$ pku:bin Prashant$ 
